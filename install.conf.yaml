- defaults:
    link:
      relink: true

- clean: ['~']

- sudo:
    - apt:
      - git
      - git-lfs
      - btop
      - zsh
      - dirmngr
      - gpg
      - curl
      - gawk
      - wget
      - htop
      - neofetch
      - code
      - neovim
      - tmux
      - pass
      - pass-extension-otp
      - calibre
      # - alacritty
      - jq
      - direnv
      - docker.io
      - docker-compose-v2
      - docker-buildx
      - postgresql-client
      - mysql-client
      - sqlite3
      - fzf
      - httpie
      - fonts-firacode
      - fonts-jetbrains-mono
      - tldr
      - ncdu
      - thefuck
      - ripgrep
      - xclip
      - xsel
      - libncurses5-dev
      - libssl-dev
      - automake
      - autoconf
      - coreutils
      - inotify-tools
      - gnome-colors
      - gnome-tweaks
      - btop
      - ca-certificates
      # - zoxide
      - fd-find
      - shellcheck
      - bat
      - cloc
      - libgraph-easy-perl
      - pipx

- flatpak:
    - org.telegram.desktop
    - org.signal.Signal
    - com.spotify.Client
    - com.github.IsmaelMartinez.teams_for_linux
    - us.zoom.Zoom
    - md.obsidian.Obsidian
    - io.beekeeperstudio.Studio
    - com.brave.Browser
    - org.videolan.VLC
    - com.todoist.Todoist
    - com.discordapp.Discord
    - com.usebruno.Bruno
    - org.remmina.Remmina
    - io.bassi.Amberol
    - org.gnome.World.PikaBackup

- create:
    - ~/Projects
    - ~/Projects/freelance
    - ~/Projects/personal
    - ~/Projects/work
    - ~/Projects/other
    - ~/.local/bin
    - ~/.go

- link:
    ~/.gitconfig: config/gitconfig
    ~/.gitignore: config/gitignore
    ~/.zshrc: config/zshrc
    ~/.rsync_skip: config/rsync_skip
    ~/.tool-versions: config/tool-versions
    ~/.asdfrc: config/asdfrc
    ~/.tmux.conf: config/tmux.conf
    ~/.terraformrc: config/terraformrc
    ~/.config/alacritty: config/alacritty
    ~/.config/Code/User/settings.json: vscode/settings.json
    ~/.config/Code/User/keybindings.json: vscode/keybindings.json
    ~/.config/Code/User/snippets: vscode/snippets
    ~/.config/nvim: nvim
    ~/.config/ohmyposh: config/ohmyposh
    ~/.config/gh/config.yml: config/gh/config.yml

- shell:
  - command: >
      code
      --install-extension ms-python.vscode-pylance
      --install-extension ms-azuretools.vscode-docker
      --install-extension mikestead.dotenv
      --install-extension editorconfig.editorconfig
      --install-extension florinpatrascu.vscode-elixir-snippets
      --install-extension JakeBecker.elixir-ls
      --install-extension tamasfe.even-better-toml
      --install-extension tombonnike.vscode-status-bar-format-toggle
      --install-extension mhutchie.git-graph
      --install-extension eamodio.gitlens
      --install-extension golang.go
      --install-extension hashicorp.terraform
      --install-extension ms-python.isort
      --install-extension ivory-lab.jenkinsfile-support
      --install-extension wholroyd.jinja
      --install-extension equinusocio.vsc-material-theme-icons
      --install-extension phoenixframework.phoenix
      --install-extension esbenp.prettier-vscode
      --install-extension ms-python.python
      --install-extension timonwong.shellcheck
      --install-extension fivethree.vscode-svelte-snippets
      --install-extension bradlc.vscode-tailwindcss
      --install-extension ms-vscode.test-adapter-converter
      --install-extension hbenl.vscode-test-explorer
      --install-extension enkia.tokyo-night
      --install-extension shardulm94.trailing-spaces
      --install-extension redhat.vscode-xml
      --install-extension redhat.vscode-yaml
      --install-extension ms-python.mypy-type-checker
      --install-extension ms-python.black-formatter
    stderr: true
    quiet: true
    description: install vscode extensions

- shell:
  - command: |
      if ! getent group docker > /dev/null 2>&1; then
        sudo groupadd docker
        sudo usermod -aG docker $USER
      fi
    stderr: true
    quiet: true
    description: add user to docker group

- shell:
  - command: |
      if [ ! -f $HOME/.ssh/id_ed25519 ]; then
        ssh-keygen -o -a 100 -t ed25519 -N '' -f $HOME/.ssh/id_ed25519
      fi
    stderr: true
    quiet: true
    description: generate ssh key

  - command: |
      if [ -d $HOME/.asdf ]; then
        exit 0
      fi

      git clone https://github.com/asdf-vm/asdf.git $HOME/.asdf --branch v0.14.0

      $HOME/.asdf/bin/asdf plugin add nodejs https://github.com/asdf-vm/asdf-nodejs.git || true
      $HOME/.asdf/bin/asdf plugin-add terraform https://github.com/asdf-community/asdf-hashicorp.git || true
      $HOME/.asdf/bin/asdf plugin-add python https://github.com/asdf-community/asdf-python.git || true
      $HOME/.asdf/bin/asdf plugin-add golang https://github.com/asdf-community/asdf-golang.git || true
      $HOME/.asdf/bin/asdf plugin add erlang https://github.com/asdf-vm/asdf-erlang.git || true
      $HOME/.asdf/bin/asdf plugin-add elixir https://github.com/asdf-vm/asdf-elixir.git || true
      $HOME/.asdf/bin/asdf plugin-add zig https://github.com/asdf-community/asdf-zig.git || true
      ASDF_PYAPP_INCLUDE_DEPS=1 $HOME/.asdf/bin/asdf plugin add ansible https://github.com/amrox/asdf-pyapp.git || true
      $HOME/.asdf/bin/asdf plugin add awscli https://github.com/MetricMike/asdf-awscli.git || true
    stderr: true
    quiet: true
    description: install asdf

  - command: |
      if [ ! -d $HOME/.tmux/plugins/tpm ]; then
        git clone https://github.com/tmux-plugins/tpm $HOME/.tmux/plugins/tpm
      fi
    stderr: true
    stdout: true
    quiet: true
    description: install tpm

  - command: |
      if [ ! $SHELL = '/bin/zsh' ]; then
        chsh -s /bin/zsh
      fi
    stdin: true
    stderr: true
    quiet: true
    description: change default shell

  - command: |
      if [ ! -d $HOME/.local/share/fonts ]; then
        mkdir -p ~/.local/share/fonts
        cd ~/.local/share/fonts && curl -fLO https://github.com/ryanoasis/nerd-fonts/raw/HEAD/patched-fonts/FiraCode/Regular/FiraCodeNerdFont-Regular.ttf
      fi
    stderr: true
    quiet: true
    description: add nerd fonts firacode

  - command: |
      export GOPATH="$HOME/.go"
      go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.55.2
      go install github.com/a-h/templ/cmd/templ@latest
      go install github.com/xo/usql@latest
      go install github.com/mikefarah/yq/v4@latest
      go install github.com/air-verse/air@latest
      go install github.com/rakyll/hey@latest
      go install github.com/maaslalani/slides@latest
      go install github.com/fullstorydev/grpcurl/cmd/grpcurl@latest
    stderr: true
    quiet: true
    description: install go binaries

  - command: |
      if ! command -v oh-my-posh; then
        curl -s https://ohmyposh.dev/install.sh | bash -s -- -d $HOME/.local/bin
      fi
    stderr: true
    quiet: true
    description: install oh-my-posh
